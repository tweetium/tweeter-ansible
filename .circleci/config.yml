version: 2.1

orbs:
  docker: circleci/docker@0.5.19
  dockerize: ganta/dockerize@1.3.2
  persist-env: christeredvartsen/persist-env@0.1.0

jobs:
  check-healthcheck-on-deployed-instance:
    machine: true
    steps:
      - checkout
      - run: docker-compose up -d
      # Manually inject variables from environment since docker-compose
      # does not inherit environment variables
      - run: echo "do_token = \"$TF_VAR_do_token\"" >> ./secrets.auto.tfvars
      - run: echo "do_ssh_key_name = \"$TF_VAR_do_ssh_key_name\"" >> ./secrets.auto.tfvars
      - run: echo "cf_zone_id = \"$TF_VAR_cf_zone_id\"" >> ./secrets.auto.tfvars
      - run: echo "cf_token = \"$TF_VAR_cf_token\"" >> ./secrets.auto.tfvars
      # Get the public ssh key in a file so we can add to new hosts
      - run: ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
      - persist-env/set-env-var:
          var-name: WORKSPACE_NAME
          var-value: ci-$CIRCLE_SHA1-$CIRCLE_BUILD_NUM
      # Create infrastructure
      - run: |
          docker-compose exec tweeter-infra bash -c "
            terraform workspace new $WORKSPACE_NAME;
            terraform init;
            terraform apply -auto-approve;"
      - docker/install-dockerize
      # Check that server accepts /healthcheck
      - dockerize/wait-http:
          host: $WORKSPACE_NAME.tweeter.dev
          path: /healthcheck
          # Due to Cloudflare record creation, may not be accessible
          # until around ~20-30 seconds after provisioning.
          timeout: "60s"
      # Always cleanup infrastructure
      - run:
          command: |
            docker-compose up -d;
            docker-compose exec tweeter-infra bash -c "
              terraform destroy -auto-approve;"
          when: always

workflows:
  version: 2
  build:
    jobs:
      - check-healthcheck-on-deployed-instance
